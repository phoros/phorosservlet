import edu.holycross.shot.sparqlimg.CiteImage
import edu.holycross.shot.phoros.QueryGenerator

String sparql = "@sparqls@"
String fcgi =  "@iipsrv@"

String demoImage = "@demoImage@"

String demoObject = "@demoObject@"
String demoText = "@demoText@"

CiteImage citeimg = new CiteImage(sparql, fcgi)

QueryGenerator qg = new QueryGenerator()


String svcReply = citeimg.getSparqlReply("application/json", citeimg.qg.summarizeGroupsQuery())
def slurper = new groovy.json.JsonSlurper()
def imgReply = slurper.parseText(svcReply)


html.html {
    head {
        title("@projectlabel@")
		link(type : "text/css", rel : "stylesheet", href : "@coreCss@", title : "CSS stylesheet")
    }
    
    body {
    
    	header (role : "banner"){
            h1("@projectlabel@: sources for the study of Athenian Tribute")
            nav(role : "navigation")
    	}
    	
    	article (role : "main") {
	  


	    ul {

	      li {				
		mkp.yield "see a summary of "
		a(href: "survival.html","surviving payment records")
	      }


	      li {
		mkp.yield "browse "
		a(href : "browseimg?urn=urn:cite:shotimg:atl", "images")
	      }

	      /*
	      li {
		mkp.yield "read "
		a(href: "textdocs","texts")
		}*/


	      li {
	       mkp.yield "see layout of documents on "
		a (href: "indices?urn=urn:cite:shotimg:atl.ATL001","stele 1")
	      }
	      /*
	      li {
		mkp.yield "analyze payment records"
	      } */




                li {
                    mkp.yield ("See an ")
                    a(href : "overview", "overview of contents")
		    mkp.yield (" (with links to browse contents)")
                }

	      li {
		a(href : "svcforms", "look up material by URN")
	      }
            }
        }

        footer("@htmlfooter@")
    }
}
