import edu.holycross.shot.sparqlimg.CiteImage
import edu.holycross.shot.phoros.QueryGenerator

String sparql = "@sparqls@"
String fcgi =  "@iipsrv@"

String demoImage = "@demoImage@"

String demoObject = "@demoObject@"
String demoText = "@demoText@"

CiteImage citeimg = new CiteImage(sparql, fcgi)

QueryGenerator qg = new QueryGenerator()


String svcReply = citeimg.getSparqlReply("application/json", citeimg.qg.summarizeGroupsQuery())
def slurper = new groovy.json.JsonSlurper()
def imgReply = slurper.parseText(svcReply)


html.html {
    head {
        title("@projectlabel@")
		link(type : "text/css", rel : "stylesheet", href : "@coreCss@", title : "CSS stylesheet")
    }
    
    body {
    
    	header (role : "banner"){
            h1("@projectlabel@: sources for the study of Athenian Tribute")
            nav(role : "navigation")
    	}
    	
    	article (role : "main") {
	  

	  h2("Texts, artifacts, images")
	  ul {
	    li {
	      mkp.yield "browse "
	      a(href: "textdocs", "texts")
	    }

	    li {
	      a (href: "indices?urn=urn:cite:shotimg:atl.ATL001","inscribed surfaces on stele 1")
	    }

	    li {
	      mkp.yield "extant stone fragments (TBA)"
	    }

	    li {
	      mkp.yield "browse "
	      a(href : "browseimg?urn=urn:cite:shotimg:atl", "images")
	    }
	  }


	  h2("Analyses")

	  h3("Payment records")
	  ul {
	    li {				
	      mkp.yield "see a summary of "
	      a(href: "survival.html","surviving payment records")
	      mkp.yield ", sorted by tribute-paying entity"
	    }
	  }


	  h2("Indices")

	  h3("People")
	  ul {
	    li {
	      mkp.yield "persons named in the text"
	    }
	  }


	    h2("Other utilities")
	    ul{

	      li {
		mkp.yield ("See an automatically generated ")
		a(href : "overview", "summary of archival material")
		mkp.yield (" (with links to browse contents)")
	      }

	      li {
		a(href : "svcforms", "look up material by URN")
	      }
            }
        }

        footer("@htmlfooter@")
    }
}
